mod mpt_body;
global MAX_PATH_LEANGTH: u32 = 1;

global HONK_VK_SIZE: u32 = 112;
global HONK_PROOF_SIZE: u32 = 456;
global HONK_IDENTIFIER: u32 = 1;

// inner layers
fn main(
    nodes: [mpt_body::Node; MAX_PATH_LEANGTH], 
    node_length: u32,


    root: pub [u8; 32],
    trie_key: pub [u8; 32],
    trie_key_new_index: pub u32,
    new_root: pub [u8; 32],

    verification_key: pub [Field; HONK_VK_SIZE],
    is_first_inner_layer: bool,
    proof: [Field; HONK_PROOF_SIZE],
    public_inputs: [Field; 97 + HONK_VK_SIZE]
    // root: pub [u8; 32], 
    // trie_key: pub [u8; 32], 
    // trie_key_new_index (new starting index): pub u8, 
    // this_segment_root (new_root): pub [u8; 32]
    // verification_key: pub [Field, 112] -> it must be inner_mpt_body verification key


    ) {
        for i in 0 .. HONK_VK_SIZE {
            assert(verification_key[i] == public_inputs[i + 97]);
        }
        let mut final_verification_key: [Field; HONK_VK_SIZE] = [0; HONK_VK_SIZE];
        if is_first_inner_layer {
            final_verification_key = [
                1048576,
                225,
                1,
                209,
                43172552406761326713863486281741073770885,
                247843365284829355739702354837856579,
                74836586847497139412137682760245850297704,
                44177840456703405522572053083719716,
                65545520866973346665035792185586304030800,
                142623272036265632936517445360050792,
                69416283318226407526650433367706671897468,
                84926843180050587378960902789964712,
                35238873134232108010927407395277379325008,
                8913043806645487515246286429904003,
                2664994174072269674856427865633030618482,
                148578854602048082957674934901443588,
                7537532376276811529514891611497746337551,
                76586808329507103984550299635418420,
                39654954371099556677018336789033328708034,
                163333226486731440340647286048503036,
                60482624690044604545494577952637071205889,
                214250479444380353718299039534898423,
                42184176838261266050665187313443059206420,
                187774280887624081658357722241138821,
                60270903545914480718260668443211340860291,
                232998858112258303712427914443322182,
                56161576027565599493429421437240656022995,
                97100792632894248750818809359139230,
                47920029791273394792447285693663516102108,
                47105415176728911398011914043481798,
                67709919120761626124327410882988727275337,
                111071005886919882446739176592049278,
                84887471053958696742850372678835581455536,
                5963983950567320540497340760727896,
                10359752414614598559087450243017136809342,
                150238802517365058834802342687559923,
                61101711566741047593043127666464270751801,
                73435606880060090999033227819674856,
                58500127780539401406639453605599677046486,
                182317615897499024073393666580181017,
                79829275845600542921293474914549157851471,
                49249198260434508629582280780819173,
                61210746983689490483653121859128088312082,
                222639320300021838835948186760327821,
                40117391142405499349964032365249160137752,
                198756753344532303991802819541310241,
                34051928505204264603116855456477922993271,
                13386599987305956229734505964074910,
                70708467024664943465335566898347281284039,
                220929991267198467757113920343063308,
                44638585992909372048908671205343075687201,
                31780281081539861489776141362060158,
                62817202530722662872077468145859749167047,
                184800252255856719177635937728248313,
                4358047101070591270916531980148301712564,
                33177965428914364568039714612962831,
                39929565168980246633873610650570390741587,
                155035691725323748511658794346562881,
                16939217360128310911311255986184345479972,
                159525767823380274027616929103404844,
                21495670377379870534164192914362235622345,
                220873421600865307999231103116523749,
                67179016624066534711550853166401347490253,
                187430771574554978110062867589800304,
                77117732522516155536584784149996165648507,
                210108006202283453694418040657322886,
                46961128036988169038935880951641567452582,
                21871284337291772177687499925638443,
                85867813156811814204138696809915521131006,
                251151929546322494709153210965129410,
                63410228542480429175779887656106535163654,
                85606979169351419197470651031919959,
                80681158333736284244955270023793449861762,
                170623894171308667742171274785886972,
                76052337954876626310225615734977827691601,
                61778483266351640052674284850243937,
                64575566150969748787623101490428759036815,
                36495321966413135909249703139944138,
                24197892071878597273854693767476264922660,
                181998855783923931730949240374270093,
                66709321977115230870976335498648852088992,
                126871703498199871209627395270035755,
                38625629740831034194642910725944716112427,
                26435788887553220527072693627886558,
                13721764076209577195890535136093382024515,
                70141503846005167322766919138482201,
                8209097362620938190491504843746849496393,
                245177430277360210530094916514885440,
                5230568830255399478217882289393174572539,
                187256836856408687606915590575793499,
                21167304966653535593756565776664505859285,
                13222222399007114305009339939514881,
                40841317154504669125062909368658230417523,
                48660439166524242800751628985008000,
                63633358407414013974970760687390576508954,
                152328830869130815932818377090050320,
                32632673975154353464743639744426768189675,
                161345867627325753413513193657008662,
                7968186977597110300930661051042053881787,
                62350047227692126012885535617178175,
                79241685421966187411826806985286947739545,
                67527410087798381163687543068194786,
                75737240769260953837256546245274457998044,
                119976831463465369199767598881810392,
                1,
                0,
                2,
                0,
                17208558511980877031341175583919770395691,
                164574408851831698007006453205133322,
                84127472257725856129107861866045583577460,
                203844391358718003671256573436426008
            ]
        } else {
            for i in 0 .. HONK_VK_SIZE {
                final_verification_key[i] = verification_key[i];                
            }
        }
        std::verify_proof_with_type(
            final_verification_key,
            proof,
            public_inputs,
            0x0,
            HONK_IDENTIFIER,
        );

        mpt_body::_base(
            nodes, 
            node_length, 
            root, 
            trie_key, 
            trie_key_new_index, 
            new_root,
            public_inputs);
}