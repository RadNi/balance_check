
import { Barretenberg, RawBuffer, UltraHonkBackend } from "@aztec/bb.js";
import mptBodyCircuit from "./recursive_circuit/target/mpt_body.json";
import balanceCheckCircuit from "./recursive_circuit/target/leaf_check.json";
import { Noir } from '@noir-lang/noir_js';
import { ethers } from "ethers";
import { encodeAccount, getInitialPublicInputs, getNodesFromProof, initial_proof } from "./utils";

// let account = {
// 	nonce: ["249", "0", "0", "0", "0", "0", "0", "0"],
// 	balance: ["92", "136", "146", "253", "128", "153", "90", "185", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
// 	address: ["42", "59", "246", "164", "50", "127", "232", "227", "147", "194", "133", "1", "9", "162", "231", "196", "164", "45", "14", "174"],
// 	nonce_length: "1",
// 	balance_length: "8"	
// }


// const nodes = [ {
//         "rows": [["250", "224", "226", "6", "91", "93", "73", "98", "11", "238", "95", "239", "63", "76", "198", "200", "137", "134", "222", "247", "44", "14", "211", "238", "193", "120", "17", "16", "105", "63", "168", "161"], ["216", "252", "142", "147", "167", "139", "141", "73", "254", "110", "253", "80", "43", "121", "229", "138", "132", "246", "78", "56", "224", "10", "255", "173", "204", "172", "72", "182", "130", "234", "112", "108"], ["21", "49", "231", "157", "173", "146", "70", "173", "177", "68", "116", "152", "57", "183", "145", "29", "73", "136", "148", "172", "33", "250", "43", "33", "107", "158", "124", "236", "252", "60", "40", "191"], ["14", "98", "182", "145", "54", "45", "33", "123", "212", "38", "45", "174", "128", "231", "173", "87", "176", "180", "63", "221", "47", "85", "190", "125", "138", "245", "85", "33", "250", "8", "49", "107"], ["141", "39", "168", "29", "175", "10", "211", "70", "51", "13", "31", "62", "220", "245", "81", "228", "232", "144", "185", "252", "155", "217", "189", "57", "167", "232", "250", "158", "144", "153", "211", "152"], ["102", "2", "96", "192", "155", "203", "175", "234", "245", "33", "180", "82", "239", "52", "66", "13", "217", "120", "225", "13", "149", "10", "29", "161", "119", "187", "102", "63", "206", "225", "140", "86"], ["197", "130", "228", "55", "108", "143", "85", "216", "34", "186", "203", "61", "21", "179", "16", "45", "157", "72", "216", "71", "63", "245", "22", "68", "106", "71", "45", "130", "79", "246", "5", "237"], ["91", "51", "147", "102", "53", "226", "104", "87", "131", "214", "146", "244", "33", "224", "44", "73", "106", "133", "57", "133", "154", "28", "246", "189", "157", "23", "147", "145", "63", "12", "224", "72"], ["13", "113", "44", "126", "200", "34", "138", "158", "151", "185", "85", "79", "72", "55", "170", "4", "240", "4", "214", "172", "243", "249", "39", "230", "138", "212", "165", "64", "182", "188", "77", "149"], ["163", "66", "246", "230", "38", "139", "174", "186", "114", "233", "162", "22", "12", "72", "75", "94", "30", "168", "94", "24", "203", "223", "139", "57", "189", "125", "94", "229", "69", "61", "129", "44"], ["195", "45", "245", "47", "156", "233", "85", "191", "146", "3", "127", "144", "200", "170", "4", "116", "9", "62", "238", "86", "247", "154", "121", "187", "105", "251", "45", "243", "99", "122", "47", "6"], ["133", "28", "153", "92", "204", "226", "202", "60", "159", "156", "130", "155", "89", "12", "193", "184", "219", "207", "90", "102", "60", "113", "88", "243", "97", "24", "58", "235", "76", "163", "210", "120"], ["23", "141", "227", "42", "237", "145", "19", "252", "174", "199", "228", "204", "97", "84", "28", "85", "73", "66", "163", "238", "21", "152", "103", "83", "103", "200", "204", "57", "201", "84", "248", "103"], ["218", "100", "41", "126", "61", "29", "240", "27", "101", "163", "73", "105", "180", "78", "247", "117", "169", "30", "120", "160", "220", "244", "25", "198", "86", "139", "112", "25", "71", "203", "3", "213"], ["212", "6", "227", "137", "93", "89", "209", "183", "1", "136", "192", "91", "25", "175", "144", "174", "149", "43", "194", "139", "53", "8", "212", "81", "94", "191", "162", "54", "49", "40", "212", "89"], ["139", "21", "185", "189", "114", "155", "60", "51", "67", "155", "154", "247", "32", "217", "75", "73", "3", "180", "118", "131", "62", "238", "76", "56", "233", "139", "235", "145", "53", "185", "116", "174"]],
//         "row_exist": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"],
//         "node_type": "0"
//     }, {
//         "rows": [["51", "235", "94", "183", "70", "236", "14", "125", "67", "89", "183", "108", "122", "179", "9", "201", "74", "82", "11", "201", "134", "52", "250", "22", "44", "243", "182", "245", "83", "238", "200", "136"], ["190", "127", "19", "114", "103", "82", "132", "29", "52", "242", "75", "202", "68", "88", "177", "156", "118", "77", "84", "1", "167", "200", "233", "32", "185", "122", "132", "235", "76", "11", "154", "252"], ["85", "181", "162", "71", "121", "119", "225", "8", "27", "138", "184", "143", "96", "239", "149", "13", "140", "133", "35", "198", "60", "129", "29", "13", "76", "230", "166", "86", "252", "83", "167", "84"], ["112", "230", "136", "105", "130", "195", "213", "117", "107", "12", "138", "58", "152", "88", "156", "186", "137", "102", "250", "78", "67", "172", "112", "146", "152", "157", "208", "178", "85", "162", "243", "40"], ["199", "24", "52", "107", "32", "245", "25", "41", "110", "91", "170", "242", "68", "23", "100", "167", "64", "1", "73", "111", "192", "28", "130", "72", "81", "69", "90", "96", "140", "27", "236", "131"], ["170", "74", "217", "49", "47", "246", "163", "162", "189", "0", "64", "105", "72", "191", "80", "1", "230", "109", "150", "18", "207", "70", "195", "27", "61", "174", "73", "111", "221", "123", "207", "62"], ["182", "228", "93", "205", "162", "123", "74", "148", "148", "27", "236", "194", "110", "139", "188", "107", "23", "103", "125", "70", "23", "36", "78", "109", "58", "229", "118", "60", "86", "152", "144", "20"], ["137", "248", "245", "206", "137", "167", "158", "20", "243", "98", "37", "162", "158", "99", "19", "72", "120", "93", "66", "37", "200", "179", "146", "237", "115", "215", "4", "69", "253", "189", "231", "87"], ["78", "139", "224", "136", "23", "234", "10", "29", "97", "245", "116", "245", "171", "90", "66", "120", "83", "103", "190", "71", "186", "48", "11", "60", "30", "20", "78", "244", "91", "88", "49", "211"], ["255", "242", "94", "88", "33", "155", "104", "51", "36", "153", "240", "217", "161", "125", "44", "208", "5", "26", "95", "143", "84", "102", "14", "26", "34", "190", "234", "188", "235", "54", "204", "142"], ["65", "67", "141", "11", "54", "219", "95", "91", "21", "99", "123", "91", "23", "140", "193", "248", "249", "111", "197", "239", "25", "236", "214", "254", "2", "196", "86", "148", "15", "178", "232", "141"], ["71", "232", "36", "120", "95", "152", "240", "145", "28", "79", "15", "73", "244", "8", "0", "129", "164", "239", "67", "100", "204", "233", "125", "80", "243", "133", "9", "57", "94", "162", "44", "45"], ["104", "119", "78", "224", "129", "132", "187", "130", "1", "177", "216", "38", "45", "166", "71", "67", "159", "52", "120", "112", "150", "111", "163", "201", "94", "162", "178", "120", "30", "39", "144", "102"], ["50", "88", "25", "90", "34", "35", "111", "76", "190", "106", "208", "213", "25", "63", "101", "108", "12", "167", "127", "93", "236", "163", "146", "83", "226", "83", "119", "113", "232", "151", "137", "30"], ["99", "229", "77", "204", "223", "117", "164", "229", "117", "169", "245", "222", "68", "99", "174", "29", "142", "17", "29", "183", "190", "133", "155", "202", "255", "128", "233", "82", "151", "44", "52", "210"], ["159", "169", "13", "117", "204", "243", "197", "27", "31", "171", "186", "82", "42", "45", "197", "103", "108", "54", "100", "7", "164", "136", "187", "35", "25", "107", "112", "34", "131", "106", "161", "101"]],
//         "row_exist": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"],
//         "node_type": "0"
//     }, {
//         "rows": [["89", "96", "76", "21", "102", "145", "148", "92", "221", "60", "39", "17", "14", "0", "206", "183", "88", "194", "87", "41", "226", "28", "165", "89", "196", "109", "138", "213", "115", "67", "37", "191"], ["66", "248", "227", "182", "77", "117", "52", "155", "0", "234", "204", "81", "0", "242", "202", "123", "196", "60", "124", "57", "33", "241", "185", "249", "131", "249", "102", "105", "44", "123", "53", "227"], ["195", "2", "85", "75", "31", "141", "105", "118", "202", "208", "103", "235", "217", "140", "75", "44", "134", "177", "147", "92", "59", "88", "188", "15", "89", "187", "169", "207", "207", "248", "64", "47"], ["168", "20", "244", "50", "22", "132", "228", "13", "167", "91", "112", "17", "92", "40", "117", "218", "143", "163", "184", "99", "89", "41", "119", "246", "76", "28", "103", "175", "15", "200", "106", "71"], ["49", "66", "123", "126", "168", "195", "121", "233", "196", "7", "199", "158", "170", "147", "98", "20", "217", "94", "16", "135", "204", "216", "98", "22", "69", "222", "198", "228", "163", "214", "106", "15"], ["30", "96", "236", "172", "237", "234", "240", "94", "83", "22", "96", "162", "138", "111", "155", "134", "73", "191", "247", "74", "160", "224", "73", "211", "222", "103", "37", "32", "72", "179", "41", "123"], ["176", "17", "57", "46", "47", "92", "208", "90", "110", "65", "48", "216", "224", "90", "235", "210", "169", "228", "155", "253", "97", "152", "123", "177", "23", "135", "123", "182", "38", "195", "195", "78"], ["24", "252", "58", "15", "48", "233", "220", "36", "236", "194", "52", "231", "60", "155", "88", "209", "99", "117", "16", "207", "86", "244", "243", "176", "66", "160", "8", "135", "39", "232", "169", "163"], ["23", "104", "155", "37", "111", "50", "76", "8", "11", "134", "69", "130", "10", "65", "130", "69", "30", "103", "229", "185", "130", "101", "237", "191", "189", "46", "183", "230", "230", "234", "220", "99"], ["134", "175", "55", "64", "251", "29", "28", "153", "139", "102", "32", "160", "132", "239", "245", "235", "254", "60", "95", "146", "151", "115", "129", "4", "220", "140", "47", "170", "44", "206", "40", "239"], ["140", "204", "119", "111", "106", "204", "207", "154", "21", "53", "147", "63", "98", "71", "134", "91", "225", "49", "3", "29", "45", "228", "141", "145", "143", "166", "202", "91", "60", "7", "102", "141"], ["53", "170", "14", "33", "220", "136", "177", "146", "223", "91", "58", "67", "12", "157", "253", "43", "177", "158", "220", "46", "93", "58", "114", "237", "216", "242", "37", "87", "111", "188", "114", "3"], ["138", "149", "63", "78", "252", "124", "212", "163", "96", "134", "5", "53", "176", "97", "241", "45", "107", "145", "135", "123", "150", "209", "195", "120", "149", "160", "229", "238", "47", "200", "160", "16"], ["31", "154", "213", "223", "237", "156", "76", "6", "223", "25", "63", "254", "141", "124", "193", "30", "88", "70", "81", "150", "224", "212", "226", "222", "54", "64", "25", "237", "21", "252", "215", "166"], ["213", "64", "244", "205", "222", "197", "165", "126", "41", "115", "3", "97", "96", "244", "210", "135", "197", "176", "36", "170", "4", "191", "253", "89", "112", "108", "20", "133", "183", "196", "175", "143"], ["137", "175", "161", "253", "34", "233", "219", "127", "17", "71", "167", "52", "67", "38", "53", "94", "197", "44", "125", "239", "124", "73", "218", "191", "162", "214", "109", "137", "80", "156", "60", "219"]],
//         "row_exist": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"],
//         "node_type": "0"
//     }, {
//         "rows": [["250", "103", "104", "220", "11", "37", "29", "16", "227", "16", "199", "78", "122", "59", "167", "153", "56", "9", "187", "232", "105", "63", "165", "58", "227", "57", "204", "137", "148", "245", "208", "201"], ["154", "64", "172", "124", "15", "103", "46", "90", "80", "57", "228", "99", "169", "250", "90", "92", "221", "239", "150", "186", "182", "19", "67", "218", "230", "227", "20", "247", "179", "153", "29", "43"], ["246", "5", "233", "232", "211", "116", "237", "150", "205", "63", "228", "248", "61", "49", "16", "253", "94", "210", "124", "78", "176", "136", "195", "85", "179", "135", "32", "194", "141", "206", "249", "179"], ["57", "87", "71", "87", "89", "123", "90", "220", "57", "223", "242", "20", "52", "85", "27", "33", "172", "63", "1", "81", "219", "199", "32", "94", "187", "87", "205", "45", "9", "155", "125", "224"], ["65", "40", "53", "251", "240", "166", "23", "141", "173", "29", "139", "38", "49", "200", "191", "66", "101", "157", "154", "28", "128", "179", "112", "185", "13", "140", "248", "100", "157", "121", "205", "75"], ["141", "105", "36", "26", "169", "253", "117", "207", "132", "52", "201", "145", "155", "182", "183", "19", "77", "247", "26", "212", "4", "42", "185", "15", "71", "33", "53", "135", "29", "139", "13", "217"], ["206", "214", "33", "87", "104", "52", "196", "218", "51", "39", "88", "81", "44", "94", "22", "38", "27", "241", "165", "26", "186", "203", "34", "25", "1", "201", "28", "69", "177", "233", "90", "11"], ["240", "171", "95", "89", "42", "164", "66", "236", "203", "230", "225", "172", "150", "123", "174", "179", "122", "35", "242", "252", "169", "153", "205", "10", "223", "129", "214", "209", "177", "222", "201", "8"], ["180", "37", "155", "159", "197", "143", "50", "192", "224", "52", "81", "78", "179", "128", "35", "118", "67", "115", "30", "173", "114", "147", "20", "133", "235", "255", "11", "209", "68", "24", "126", "76"], ["30", "157", "202", "237", "77", "207", "53", "47", "254", "238", "40", "185", "189", "172", "73", "87", "8", "30", "153", "113", "80", "86", "119", "109", "134", "133", "236", "205", "101", "6", "76", "197"], ["218", "89", "165", "14", "36", "16", "240", "12", "94", "6", "75", "254", "12", "70", "130", "153", "219", "115", "177", "101", "186", "168", "244", "202", "45", "238", "140", "123", "155", "177", "143", "64"], ["36", "248", "107", "163", "190", "61", "94", "141", "29", "165", "65", "8", "64", "145", "117", "109", "239", "224", "28", "230", "192", "59", "189", "143", "237", "205", "234", "215", "37", "98", "92", "106"], ["20", "246", "4", "28", "188", "79", "129", "142", "172", "46", "155", "110", "201", "205", "16", "101", "167", "74", "68", "223", "196", "10", "97", "118", "252", "99", "15", "60", "163", "7", "255", "220"], ["87", "252", "107", "237", "168", "12", "62", "230", "95", "198", "135", "96", "198", "69", "253", "83", "195", "29", "33", "190", "130", "199", "16", "139", "1", "227", "155", "148", "53", "107", "174", "229"], ["248", "130", "203", "162", "201", "150", "123", "85", "234", "167", "119", "72", "181", "100", "194", "183", "128", "73", "164", "42", "190", "13", "122", "31", "105", "205", "88", "87", "76", "32", "64", "191"], ["161", "201", "87", "63", "118", "248", "196", "130", "145", "175", "228", "241", "40", "109", "188", "166", "227", "0", "18", "251", "12", "59", "148", "244", "26", "211", "149", "82", "210", "85", "72", "225"]],
//         "row_exist": ["1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"],
//         "node_type": "0"
//     }, {
//         "rows": [["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["142", "123", "86", "7", "117", "169", "70", "72", "246", "40", "119", "161", "68", "147", "71", "30", "181", "247", "9", "190", "132", "0", "184", "174", "12", "53", "66", "189", "130", "4", "221", "110"], ["99", "193", "21", "67", "110", "89", "151", "139", "77", "114", "232", "226", "225", "255", "14", "120", "173", "67", "192", "253", "27", "236", "21", "203", "180", "1", "59", "157", "40", "72", "18", "7"], ["248", "229", "50", "149", "157", "213", "37", "43", "150", "186", "126", "2", "77", "18", "126", "27", "244", "117", "192", "45", "237", "88", "151", "50", "201", "39", "180", "209", "29", "179", "52", "219"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["177", "227", "109", "139", "46", "49", "221", "102", "154", "31", "219", "106", "72", "122", "219", "106", "111", "52", "209", "84", "123", "112", "243", "99", "184", "199", "42", "241", "159", "228", "25", "27"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["38", "131", "136", "128", "69", "178", "83", "36", "87", "94", "115", "239", "171", "139", "214", "134", "69", "33", "0", "49", "165", "142", "50", "85", "39", "71", "24", "176", "126", "95", "141", "167"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["176", "85", "157", "208", "100", "142", "255", "34", "241", "126", "186", "92", "118", "110", "223", "48", "157", "104", "41", "143", "111", "143", "177", "81", "119", "31", "8", "252", "11", "127", "3", "188"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"], ["201", "16", "28", "197", "39", "153", "11", "42", "24", "121", "180", "143", "204", "241", "170", "61", "159", "242", "215", "117", "78", "166", "65", "70", "149", "180", "253", "23", "173", "41", "178", "213"], ["0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"]],
//         "row_exist": ["0", "1", "1", "1", "0", "0", "1", "0", "1", "0", "0", "0", "1", "0", "1", "0"],
//         "node_type": "0"
//     }
// ]
// const root = ["148", "35", "98", "239", "195", "24", "71", "219", "91", "186", "52", "161", "79", "10", "122", "82", "6", "121", "232", "74", "132", "155", "156", "226", "255", "44", "236", "132", "237", "77", "189", "6"]

// const initial_public_inputs = [
//         // root:
//         "0x0000000000000000000000000000000000000000000000000000000000000094", "0x0000000000000000000000000000000000000000000000000000000000000023", "0x0000000000000000000000000000000000000000000000000000000000000062", "0x00000000000000000000000000000000000000000000000000000000000000ef", "0x00000000000000000000000000000000000000000000000000000000000000c3", "0x0000000000000000000000000000000000000000000000000000000000000018", "0x0000000000000000000000000000000000000000000000000000000000000047", "0x00000000000000000000000000000000000000000000000000000000000000db", "0x000000000000000000000000000000000000000000000000000000000000005b", "0x00000000000000000000000000000000000000000000000000000000000000ba", "0x0000000000000000000000000000000000000000000000000000000000000034", "0x00000000000000000000000000000000000000000000000000000000000000a1", "0x000000000000000000000000000000000000000000000000000000000000004f", "0x000000000000000000000000000000000000000000000000000000000000000a", "0x000000000000000000000000000000000000000000000000000000000000007a", "0x0000000000000000000000000000000000000000000000000000000000000052", "0x0000000000000000000000000000000000000000000000000000000000000006", "0x0000000000000000000000000000000000000000000000000000000000000079", "0x00000000000000000000000000000000000000000000000000000000000000e8", "0x000000000000000000000000000000000000000000000000000000000000004a", "0x0000000000000000000000000000000000000000000000000000000000000084", "0x000000000000000000000000000000000000000000000000000000000000009b", "0x000000000000000000000000000000000000000000000000000000000000009c", "0x00000000000000000000000000000000000000000000000000000000000000e2", "0x00000000000000000000000000000000000000000000000000000000000000ff", "0x000000000000000000000000000000000000000000000000000000000000002c", "0x00000000000000000000000000000000000000000000000000000000000000ec", "0x0000000000000000000000000000000000000000000000000000000000000084", "0x00000000000000000000000000000000000000000000000000000000000000ed", "0x000000000000000000000000000000000000000000000000000000000000004d", "0x00000000000000000000000000000000000000000000000000000000000000bd", "0x0000000000000000000000000000000000000000000000000000000000000006",
//         // trie_key:
//         "0x00000000000000000000000000000000000000000000000000000000000000fa", "0x000000000000000000000000000000000000000000000000000000000000000a", "0x0000000000000000000000000000000000000000000000000000000000000022", "0x00000000000000000000000000000000000000000000000000000000000000c4", "0x00000000000000000000000000000000000000000000000000000000000000ec", "0x0000000000000000000000000000000000000000000000000000000000000088", "0x000000000000000000000000000000000000000000000000000000000000004e", "0x00000000000000000000000000000000000000000000000000000000000000db", "0x00000000000000000000000000000000000000000000000000000000000000cd", "0x0000000000000000000000000000000000000000000000000000000000000018", "0x0000000000000000000000000000000000000000000000000000000000000050", "0x00000000000000000000000000000000000000000000000000000000000000b9", "0x00000000000000000000000000000000000000000000000000000000000000dc", "0x00000000000000000000000000000000000000000000000000000000000000cb", "0x0000000000000000000000000000000000000000000000000000000000000054", "0x0000000000000000000000000000000000000000000000000000000000000085", "0x0000000000000000000000000000000000000000000000000000000000000050", "0x00000000000000000000000000000000000000000000000000000000000000db", "0x00000000000000000000000000000000000000000000000000000000000000b3", "0x000000000000000000000000000000000000000000000000000000000000001c", "0x0000000000000000000000000000000000000000000000000000000000000095", "0x00000000000000000000000000000000000000000000000000000000000000d3", "0x000000000000000000000000000000000000000000000000000000000000008a", "0x000000000000000000000000000000000000000000000000000000000000001c", "0x0000000000000000000000000000000000000000000000000000000000000028", "0x0000000000000000000000000000000000000000000000000000000000000009", "0x0000000000000000000000000000000000000000000000000000000000000003", "0x000000000000000000000000000000000000000000000000000000000000005c", "0x00000000000000000000000000000000000000000000000000000000000000fd", "0x000000000000000000000000000000000000000000000000000000000000004c", "0x000000000000000000000000000000000000000000000000000000000000003e", "0x00000000000000000000000000000000000000000000000000000000000000a0",
//         // trie_key_start_index:
//         "0x0000000000000000000000000000000000000000000000000000000000000000",
//         // this_segment_root:
//         "0x0000000000000000000000000000000000000000000000000000000000000094", "0x0000000000000000000000000000000000000000000000000000000000000023", "0x0000000000000000000000000000000000000000000000000000000000000062", "0x00000000000000000000000000000000000000000000000000000000000000ef", "0x00000000000000000000000000000000000000000000000000000000000000c3", "0x0000000000000000000000000000000000000000000000000000000000000018", "0x0000000000000000000000000000000000000000000000000000000000000047", "0x00000000000000000000000000000000000000000000000000000000000000db", "0x000000000000000000000000000000000000000000000000000000000000005b", "0x00000000000000000000000000000000000000000000000000000000000000ba", "0x0000000000000000000000000000000000000000000000000000000000000034", "0x00000000000000000000000000000000000000000000000000000000000000a1", "0x000000000000000000000000000000000000000000000000000000000000004f", "0x000000000000000000000000000000000000000000000000000000000000000a", "0x000000000000000000000000000000000000000000000000000000000000007a", "0x0000000000000000000000000000000000000000000000000000000000000052", "0x0000000000000000000000000000000000000000000000000000000000000006", "0x0000000000000000000000000000000000000000000000000000000000000079", "0x00000000000000000000000000000000000000000000000000000000000000e8", "0x000000000000000000000000000000000000000000000000000000000000004a", "0x0000000000000000000000000000000000000000000000000000000000000084", "0x000000000000000000000000000000000000000000000000000000000000009b", "0x000000000000000000000000000000000000000000000000000000000000009c", "0x00000000000000000000000000000000000000000000000000000000000000e2", "0x00000000000000000000000000000000000000000000000000000000000000ff", "0x000000000000000000000000000000000000000000000000000000000000002c", "0x00000000000000000000000000000000000000000000000000000000000000ec", "0x0000000000000000000000000000000000000000000000000000000000000084", "0x00000000000000000000000000000000000000000000000000000000000000ed", "0x000000000000000000000000000000000000000000000000000000000000004d", "0x00000000000000000000000000000000000000000000000000000000000000bd", "0x0000000000000000000000000000000000000000000000000000000000000006"
//     ]
// const trie_key = ["250", "10", "34", "196", "236", "136", "78", "219", "205", "24", "80", "185", "220", "203", "84", "133", "80", "219", "179", "28", "149", "211", "138", "28", "40", "9", "3", "92", "253", "76", "62", "160"]
// const new_roots = [
//     ["139", "21", "185", "189", "114", "155", "60", "51", "67", "155", "154", "247", "32", "217", "75", "73", "3", "180", "118", "131", "62", "238", "76", "56", "233", "139", "235", "145", "53", "185", "116", "174"],
//     ["65", "67", "141", "11", "54", "219", "95", "91", "21", "99", "123", "91", "23", "140", "193", "248", "249", "111", "197", "239", "25", "236", "214", "254", "2", "196", "86", "148", "15", "178", "232", "141"],
//     ["89", "96", "76", "21", "102", "145", "148", "92", "221", "60", "39", "17", "14", "0", "206", "183", "88", "194", "87", "41", "226", "28", "165", "89", "196", "109", "138", "213", "115", "67", "37", "191"], 
//     ["218", "89", "165", "14", "36", "16", "240", "12", "94", "6", "75", "254", "12", "70", "130", "153", "219", "115", "177", "101", "186", "168", "244", "202", "45", "238", "140", "123", "155", "177", "143", "64"],
//     ["99", "193", "21", "67", "110", "89", "151", "139", "77", "114", "232", "226", "225", "255", "14", "120", "173", "67", "192", "253", "27", "236", "21", "203", "180", "1", "59", "157", "40", "72", "18", "7"]
// ]


const show = (id, content) => {
    const container = document.getElementById(id);
	container.appendChild(document.createTextNode(content));
	container.appendChild(document.createElement("br"));
};
   


document.getElementById("submit").addEventListener("click", async () => {
    const age = document.getElementById("age").value;
    show("logs", "Connecting to metamask... ⏳");


    let from;
    if (window.ethereum) {
        console.log(ethers.providers)
        const provider = new ethers.JsonRpcProvider("https://rpc.purroofgroup.com")
        console.log("sag2")
        let address = "0x2a3bf6a4327fe8e393c2850109a2e7c4a42d0eae"
        let output = await provider.send("eth_getProof", [address, [], "latest"])
        // console.log(output)
        let encoded = getNodesFromProof(output.accountProof)
        let {account, trie_key} = encodeAccount(output, address)
        let nodes = encoded.nodes
        let root = encoded.roots[0]
        let new_roots = encoded.roots.slice(1)
        let initial_public_inputs = getInitialPublicInputs(trie_key, root)
        console.log(nodes)
        console.log(account)
        console.log(new_roots)
        console.log(root)
        
        // const provider = new ethers.BrowserProvider(window.ethereum)
    
    //  from = await provider.send("eth_requestAccounts", [])  // hardhat wallet 0
    //  console.log(from)
 



    show("logs", "Generating inner circuit verification key... ⏳");
    
    const mptBodyCircuitNoir = new Noir(mptBodyCircuit);
    const innerBackend = new UltraHonkBackend(mptBodyCircuit.bytecode, { threads: 5 }, { recursive: true });
    const balanceCheckNoir = new Noir(balanceCheckCircuit);
    const balanceCheckBackend = new UltraHonkBackend(balanceCheckCircuit.bytecode, { threads: 5 }, { recursive: true });

    const mptBodyCircuitVerificationKey = await innerBackend.getVerificationKey();
    const barretenbergAPI = await Barretenberg.new({ threads: 5 });
    const vkAsFields = (await barretenbergAPI.acirVkAsFieldsUltraHonk(new RawBuffer(mptBodyCircuitVerificationKey))).map(field => field.toString());

    let recursiveProof;
    let input;



    // show("logs", "Generating inner circuit witness... ⏳");
    for (let i = 0; i < nodes.length; i++) {
        input = {
            nodes: [nodes[i]],
            node_length: "1",
            trie_key_new_index: ""+(i + 1),
            root: root,
            trie_key: trie_key,
            new_root: new_roots[i],
            verification_key: vkAsFields,
        }
        if (i != 0) {
            input.proof = recursiveProof.proof
            input.public_inputs = recursiveProof.publicInputs
            input.is_initial_proof = "0"
        } else {
            input.proof = initial_proof
            input.public_inputs = initial_public_inputs
            input.is_initial_proof = "1"
        }
        show("logs", "Generating recursive circuit witness... ⏳ " + i);
        const { witness } = await mptBodyCircuitNoir.execute(input)
        show("logs", "Generating recursive proof... ⏳ " + i);
        recursiveProof = await innerBackend.generateProofForRecursiveAggregation(witness);
    }
    console.log(recursiveProof.proof)
    console.log(recursiveProof.publicInputs)




    let balanceCheckInput = {
        account: account,
        root: root,
        balance_target: ["21", "38", "146", "253", "127", "153", "90", "185", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"],
        balance_target_length: "8",
        proof: recursiveProof.proof,
        trie_key_index: "5",
        verification_key: vkAsFields,
    }
    const { witness } = await balanceCheckNoir.execute(balanceCheckInput)
    const finalProof = await balanceCheckBackend.generateProof(witness);


    // Verify recursive proof
    show("logs", "Verifying final proof... ⏳");
    const verified = await balanceCheckBackend.verifyProof({ proof: finalProof.proof, publicInputs: finalProof.publicInputs });
    show("logs", "Final proof verified: " + verified);
    show("results", finalProof.proof)
   } else {
        console.log("sag")
    }

   });


